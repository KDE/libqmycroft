import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable Libqmycroft 1.0'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "Controller"
        prototype: "QObject"
        exports: ["Libqmycroft/Controller 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "Connecting": 0,
                "Open": 1,
                "Closing": 2,
                "Closed": 3,
                "Error": 4
            }
        }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Property { name: "speaking"; type: "bool"; isReadonly: true }
        Property { name: "listening"; type: "bool"; isReadonly: true }
        Property { name: "currentSkill"; type: "string"; isReadonly: true }
        Property { name: "currentIntent"; type: "string"; isReadonly: true }
        Property { name: "serverReady"; type: "bool"; isReadonly: true }
        Property { name: "webSocketAddress"; type: "string" }
        Property { name: "useHivemind"; type: "bool" }
        Signal { name: "socketStatusChanged" }
        Signal { name: "closed" }
        Signal { name: "isSpeakingChanged" }
        Signal { name: "isListeningChanged" }
        Signal { name: "stopped" }
        Signal { name: "notUnderstood" }
        Signal {
            name: "speechRequestedChanged"
            Parameter { name: "expectingResponse"; type: "bool" }
        }
        Signal {
            name: "intentRecevied"
            Parameter { name: "type"; type: "string" }
            Parameter { name: "data"; type: "QVariantMap" }
        }
        Signal {
            name: "fallbackTextRecieved"
            Parameter { name: "skill"; type: "string" }
            Parameter { name: "data"; type: "QVariantMap" }
        }
        Signal {
            name: "utteranceManagedBySkill"
            Parameter { name: "skill"; type: "string" }
        }
        Signal {
            name: "skillTimeoutReceived"
            Parameter { name: "skillidleid"; type: "string" }
        }
        Signal {
            name: "messageReceived"
            Parameter { name: "message"; type: "string" }
        }
        Signal { name: "webSocketChanged" }
        Method { name: "start" }
        Method { name: "disconnectSocket" }
        Method { name: "reconnect" }
        Method {
            name: "sendRequest"
            Parameter { name: "type"; type: "string" }
            Parameter { name: "data"; type: "QVariantMap" }
        }
        Method {
            name: "sendBinary"
            Parameter { name: "type"; type: "string" }
            Parameter { name: "data"; type: "QJsonObject" }
        }
        Method {
            name: "sendText"
            Parameter { name: "message"; type: "string" }
        }
        Method {
            name: "setWebSocketAddress"
            Parameter { name: "webSocketAddress"; type: "string" }
        }
        Method {
            name: "setUseHivemind"
            Parameter { name: "useHivemind"; type: "bool" }
        }
    }
    Component {
        name: "SkillEntry"
        prototype: "QObject"
        exports: ["Libqmycroft/SkillEntry 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "intent"; type: "string" }
        Property { name: "action"; type: "string" }
        Property { name: "voc"; type: "string" }
        Property { name: "dialog"; type: "string" }
        Signal {
            name: "intentChanged"
            Parameter { name: "intent"; type: "string" }
        }
        Signal {
            name: "actionChanged"
            Parameter { name: "action"; type: "string" }
        }
        Signal {
            name: "vocChanged"
            Parameter { name: "voc"; type: "string" }
        }
        Signal {
            name: "dialogChanged"
            Parameter { name: "dialog"; type: "string" }
        }
    }
    Component {
        name: "SkillManager"
        defaultProperty: "items"
        prototype: "QObject"
        exports: ["Libqmycroft/SkillManager 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "skillNamespace"; type: "string" }
        Property { name: "socketAddress"; type: "string" }
        Property { name: "items"; type: "SkillEntry"; isList: true; isReadonly: true }
        Signal {
            name: "socketReadyChanged"
            Parameter { name: "socketReady"; type: "bool" }
        }
        Signal {
            name: "intentResponse"
            Parameter { name: "response"; type: "QVariant" }
            Parameter { name: "action"; type: "string" }
        }
        Method { name: "itemsCount"; type: "int" }
        Method {
            name: "item"
            type: "SkillEntry*"
            Parameter { type: "int" }
        }
        Method {
            name: "setSkillNamespace"
            Parameter { name: "skillNamespace"; type: "string" }
        }
        Method {
            name: "toJson"
            type: "QJsonObject"
            Parameter { name: "item"; type: "SkillEntry*&" }
        }
        Method { name: "createSkill" }
        Method { name: "isSocketReady"; type: "bool" }
        Method {
            name: "onMainSocketMessageReceived"
            Parameter { name: "message"; type: "string" }
        }
        Method {
            name: "setSocketAddress"
            Parameter { name: "socketAddress"; type: "string" }
        }
    }
}
